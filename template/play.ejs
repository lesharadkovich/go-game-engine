<% layout('layout/page') -%>
<% block('title', "Play") -%>

<script src="/vendor/bower_components/socket.io-client/dist/socket.io.js"></script>
<link rel="stylesheet" href="/css/position.css"/>


<div id='info' class='status' style='display: none;'>
    <p></p>
    <button id='cancel' class="btn btn-primary">Отмена</button>
</div>

<div id='invite' class='status' style='display: none;'>
    <p></p>
    <button id='agreed' class="btn btn-primary">Принять</button>
    <button id='refused' class="btn btn-primary">Отказаться</button>
</div>


<div class="container">
    <div class="row">
        <div class="col-sm-6" id='player'>
            <p>Выберите соперника</p>
                
            <div class="container">
                <div class="row" id="test"></div>
            </div>
        </div>

        <div class="col-sm-6" id='size'>
            <p>Выберите размер поля</p>

            <div class="container">
                <div class="row">
                    <div class="col-sm-4">
                        <div class="size" id="5" onclick="chooseGameSettings(this)">5x5</div>
                        <div class="size" id="6" onclick="chooseGameSettings(this)">6x6</div>
                        <div class="size" id="7" onclick="chooseGameSettings(this)">7x7</div>
                    </div>
                    <div class="col-sm-4">
                        <div class="size" id="9" onclick="chooseGameSettings(this)">9x9</div>
                        <div class="size" id="11" onclick="chooseGameSettings(this)">11x11</div>
                        <div class="size" id="13" onclick="chooseGameSettings(this)">13x13</div>
                    </div>
                    <div class="col-sm-4">
                        <div class="size" id="15" onclick="chooseGameSettings(this)">15x15</div>
                        <div class="size" id="17" onclick="chooseGameSettings(this)">17x17</div>
                        <div class="size" id="19" onclick="chooseGameSettings(this)">19x19</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="overlay" style='display: none;'></div>

<script>
    var gameSettings = $('#gameSettings');
    var search = $('#search');
    var online = $('#test');
    var invite = $('#invite');
    var overlay = $('#overlay');
    var info = $('#info');

    var socket = io();

    socket
        //chat events
        .on('join', function() {
            socket.emit('get online list');
        })
        .on('leave', function() {
            socket.emit('get online list');
        })
        .on('connect', function() {
//            printStatus("соединение установлено");
//            form.on('submit', sendMessage);
//            input.prop('disabled', false);
        })
        .on('disconnect', function() {
//            printStatus("соединение потеряно");
//            form.off('submit', sendMessage);
//            input.prop('disabled', true);
//            this.emit('error');
        })
        .on('logout', function() {
            location.href = "/";
        })
        .on('error', function(reason) {
//            if (reason == "handshake unauthorized") {
//                printStatus("вы вышли из сайта");
//            } else {
//                setTimeout(function() {
//                    socket.socket.connect();
//                }, 500);
//            }
        })


        .on('online list', function(onlineListNames) {
            online.empty();
        
            var newOnlinePlayer = $('<div class="col-sm-4"></div>').appendTo('#test');
            var any = $('<div id="any" class="player" onclick="chooseGameSettings(this)"></div>').appendTo(newOnlinePlayer);

            $('<img src="http://via.placeholder.com/140x140" style="padding-top: 10px;">').appendTo(any);
            $('<p></p>').text("Любой").appendTo(any);
        
        
            onlineListNames.forEach(function(username) {
                var newOnlinePlayer = $('<div class="col-sm-4"></div>').appendTo('#test');
                var current = $('<div class="player online" onclick="chooseGameSettings(this)"></div>').appendTo(newOnlinePlayer);
                
                $('<img src="http://via.placeholder.com/140x140" style="padding-top: 10px;">').appendTo(current);
                $('<p></p>').text(username).appendTo(current);
            });
        
        })


        //game events

        //listen if enemy refused the game invite
        .on('refused', function(username) {
            $('#info p').text(username + ' отказался играть');

            $('#cancel').click(function() {
                info.hide('slow');
                overlay.hide();
            });
        })
        //incoming invite to play
        .on('game invite', function(from, room, creatorId) {

            $('#invite p').text(from + ' приглашает вас в игру. Принять вызов?');
            invite.show();
            overlay.show();

            $('#agreed').click(function() {
                socket.emit('agreed', true, room, creatorId);
                invite.hide();
                overlay.hide();
            });

            $('#refused').click(function() {
                socket.emit('agreed', false, room, creatorId);
                invite.hide();
                overlay.hide();
            });
        })
        .on('cancel invite', function() {
            invite.hide();
            overlay.hide();
        })

        .on('searching', function() {
            //gameSettings.hide('slow');
            overlay.show();
            $('#info p').text('Поиск подходящего противника');
            info.show('slow');

            $('#cancel').click(function() {
                //emit cancel event. delete game
                info.hide('slow');
                overlay.hide();
            });

        })
        .on('start game', function(username, room) {
            $('#info p').text('Начинается игра против ' + username);

            overlay.show();
            info.show();
            gameSettings.hide('slow');

            setTimeout(function() {
                overlay.hide();
                info.hide('slow');
                location.href = "/game/" + room;
                //game.show('slow');
            }, 3000);
        });

    var enemyName = null;
    var size = null;

    function chooseGameSettings(element) {
        
        if ($(element).hasClass("player")) {
            enemyName = choosePlayer(element);
        } else if ($(element).hasClass("size")) {
            size = chooseSize(element);
        }

        if (enemyName && size) {
            if (enemyName == ' ') socket.emit('new game with any player', size);
            else socket.emit('new challenge', enemyName, size);
            
            enemyName = null;
            size = null;
            $(".active").toggleClass("active");
            
            overlay.show();
            $('#info p').text('Ждем ответа от соперника');
            info.show('slow');

            $('#cancel').click(function() {
                //emit cancel event. delete game DO IT
                info.hide('slow');
                overlay.hide();
            });
        }
    }

    function choosePlayer(element) {
        $("#player .active").toggleClass("active");
        $(element).addClass("active");
        
        if (element.id == 'any') {
            return ' ';
        } else if ($(element).hasClass("online")) {
            return $(element).last().text();
        }
    }

    function chooseSize(element) {
        var size = +element.id;
        var choice = $('#choice');
        
        $("#size .active").toggleClass("active");
        $(element).addClass("active");

        return size;
    }

</script>
