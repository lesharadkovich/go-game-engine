<% layout('layout/page') -%>
<% block('title', "Чат") -%>

<script src="/vendor/bower_components/socket.io-client/dist/socket.io.js"></script>
<link rel="stylesheet" href="/css/position.css" />


<div id='info' class='status' style='display: none;'>
    <p></p>
    <button id='cancel' class="btn btn-primary">Отмена</button>
</div>

<div id='invite' class='status' style='display: none;'>
    <p></p>
    <button id='agreed' class="btn btn-primary">Принять</button>
    <button id='refused' class="btn btn-primary">Отказаться</button>
</div>

<div id="overlay" style='display: none;'></div>

<div class="container">
    <div class="row">
        <div class="col-sm-2 onlineList">
            <p>Online:</p>
            <ul id="online"></ul>
        </div>

        <div class="col-sm-10">
            <div id="chatMessages"></div>

            <form>
                <input class="form-control" autocomplete="off" placeholder="Сообщение...">
            </form>
        </div>
    </div>
</div>


<script>
    var input = $('input');
    var messages = $('#chatMessages');
    var room = $('#room');
    var form = $('form');
    var online = $('#online');

    var invite = $('#invite');
    var overlay = $('#overlay');
    var info = $('#info');

    var socket = io();

    socket
        .on('online list', function(onlineListNames) {
            online.empty();
        
            onlineListNames.forEach(function(username) {
                $('<li>').text(username).appendTo(online);
            });
        })
    
        .on('message #chat', function(username, message) {
            printMessage(username, message);
        })
    
        .on('leave', function() {
            socket.emit('get online list');
        })
        .on('join', function() {
            socket.emit('get online list');
        })
    
        .on('connect', function() {
            printStatus("соединение установлено");
            form.on('submit', sendMessage);
            input.prop('disabled', false);
        })
        .on('disconnect', function() {
            printStatus("соединение потеряно");
            form.off('submit', sendMessage);
            input.prop('disabled', true);
            this.emit('error');
        })
        .on('logout', function() {
            location.href = "/";
        })
        .on('error', function(reason) {
            if (reason == "handshake unauthorized") {
                printStatus("вы вышли из сайта");
            } else {
                setTimeout(function() {
                    socket.socket.connect();
                }, 500);
            }
        })

        .on('game invite', function(from, room, creatorId) {

            $('#invite p').text(from + ' приглашает вас в игру. Принять вызов?');
            invite.show();
            overlay.show();

            $('#agreed').click(function() {
                socket.emit('agreed', true, room, creatorId);
                invite.hide();
                overlay.hide();
            });

            $('#refused').click(function() {
                socket.emit('agreed', false, room, creatorId);
                invite.hide();
                overlay.hide();
            });
        })
        
        .on('cancel invite', function() {
            invite.hide();
            overlay.hide();
        })
        .on('start game', function(username, room) {
            $('#info p').text('Начинается игра против ' + username);

            overlay.show();
            info.show('slow');

            setTimeout(function() {
                overlay.hide();
                info.hide('slow');
                location.href = "/game/" + room;
                //window.open('localhost:3000/game/' + room);

                //game.show('slow');
            }, 3000);
        });

    
    function sendMessage() {
        var text = input.val();
        
        socket.emit('message #chat', text, function() {
          printMessage("я", text);
        });
        
        input.val('');
        return false;
    }
    
    function printStatus(status) {
        var newMessage = $('<div class="message statusMessage"></div>');

        newMessage.text(status).appendTo(messages);
    }
    
    function printMessage(username, text) {
        var newMessage = $('<div class="message"></div>');

        $('<div class="sender"></div>').text(username + ':').appendTo(newMessage);
        $('<div></div>').text(text).appendTo(newMessage);


        newMessage.appendTo(messages);
        messages.scrollTop(messages[0].scrollHeight);
    }

</script>
